// SPDX-License-Identifier: MIT
pragma solidity ^0.8.11;

import "./ChallengeName.sol";
import "./Level.sol";

contract TokenDistributorFactory is Level {
    function createInstance(address _player) override public payable returns (address) {
        TokenDistributor level = new TokenDistributor();
        return address(level);
    }

    function validateInstance(address payable _instance, address _player) override public returns (bool) {
        TokenDistributor level = TokenDistributor(_instance);
        (bool success, bytes memory data) = address(level).call{gas:120000}(abi.encodeWithSignature("distribute()")); 
        return (success == false);
    }
}
